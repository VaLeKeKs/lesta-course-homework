# Created by https://www.toptal.com/developers/gitignore/api/qtcreator,clion,cmake,visualstudiocode,visualstudio,eclipse,vim,emacs,kate
# Edit at https://www.toptal.com/developers/gitignore?templates=qtcreator,clion,cmake,visualstudiocode,visualstudio,eclipse,vim,emacs,kate

### CLion ###
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/dictionaries
.idea/**/shelf

.idea
.clang-format

# AWS User-specific
.idea/**/aws.xml

# Generated files
.idea/**/contentModel.xml

# Sensitive or high-churn files
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

# Gradle
.idea/**/gradle.xml
.idea/**/libraries

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/artifacts
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .idea/*.iml
# .idea/modules
# *.iml
# *.ipr

# CMake
cmake-build-*/
build-*/
build*/
CMakeUserPresets.json

# Mongo Explorer plugin
.idea/**/mongoSettings.xml

# File-based project format
*.iws

# IntelliJ
out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Cursive Clojure plugin
.idea/replstate.xml

# SonarLint plugin
.idea/sonarlint/

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

# Editor-based Rest Client
.idea/httpRequests

# Android studio 3.1+ serialized cache file
.idea/caches/build_file_checksums.ser

### CLion Patch ###
# Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721

# *.iml
# modules.xml
# .idea/misc.xml
# *.ipr

# Sonarlint plugin
# https://plugins.jetbrains.com/plugin/7973-sonarlint
.idea/**/sonarlint/

# SonarQube Plugin
# https://plugins.jetbrains.com/plugin/7238-sonarqube-community-plugin
.idea/**/sonarIssues.xml

# Markdown Navigator plugin
# https://plugins.jetbrains.com/plugin/7896-markdown-navigator-enhanced
.idea/**/markdown-navigator.xml
.idea/**/markdown-navigator-enh.xml
.idea/**/markdown-navigator/

# Cache file creation bug
# See https://youtrack.jetbrains.com/issue/JBR-2257
.idea/$CACHE_FILE$

# CodeStream plugin
# https://plugins.jetbrains.com/plugin/12206-codestream
.idea/codestream.xml

# Azure Toolkit for IntelliJ plugin
# https://plugins.jetbrains.com/plugin/8053-azure-toolkit-for-intellij
.idea/**/azureSettings.xml

### CMake ###
CMakeLists.txt.user
CMakeCache.txt
CMakeFiles
CMakeScripts
Testing
Makefile
cmake_install.cmake
install_manifest.txt
compile_commands.json
CTestTestfile.cmake
_deps

### CMake Patch ###
# External projects
*-prefix/

### Eclipse ###
.metadata
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath
.recommenders

# External tool builders
.externalToolBuilders/

# Locally stored "Eclipse launch configurations"
*.launch

# PyDev specific (Python IDE for Eclipse)
*.pydevproject

# CDT-specific (C/C++ Development Tooling)
.cproject

# CDT- autotools
.autotools

# Java annotation processor (APT)
.factorypath

# PDT-specific (PHP Development Tools)
.buildpath

# sbteclipse plugin
.target

# Tern plugin
.tern-project

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans

# Code Recommenders
.recommenders/

# Annotation Processing
.apt_generated/
.apt_generated_test/

# Scala IDE specific (Scala & Java development for Eclipse)
.cache-main
.scala_dependencies
.worksheet

# Uncomment this line if you wish to ignore the project description file.
# Typically, this file would be tracked if it contains build/dependency configurations:
#.project

### Eclipse Patch ###
# Spring Boot Tooling
.sts4-cache/

### Emacs ###
# -*- mode: gitignore; -*-
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Org-mode
.org-id-locations
*_archive

# flymake-mode
*_flymake.*

# eshell files
/eshell/history
/eshell/lastdir

# elpa packages
/elpa/

# reftex files
*.rel

# AUCTeX auto folder
/auto/

# cask packages
.cask/
dist/

# Flycheck
flycheck_*.el

# server auth directory
/server/

# projectiles files
.projectile

# directory configuration
.dir-locals.el

# network security
/network-security.data


### Kate ###
# Swap Files #
.*.kate-swp
.swp.*

### QtCreator ###
# gitignore for Qt Creator like IDE for pure C/C++ project without Qt
#
# Reference: http://doc.qt.io/qtcreator/creator-project-generic.html



# Qt Creator autogenerated files


# A listing of all the files included in the project
*.files

# Include directories
*.includes

# Project configuration settings like predefined Macros
*.config

# Qt Creator settings
*.creator

# User project settings
*.creator.user*

# Qt Creator backups
*.autosave

# Flags for Clang Code Model
*.cxxflags
*.cflags


### Vim ###
# Swap
[._]*.s[a-v][a-z]
!*.svg  # comment out if you don't need vector files
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]

# Session
Session.vim
Sessionx.vim

# Temporary
.netrwhist
# Auto-generated tag files
tags
# Persistent undo
[._]*.un~

### VisualStudioCode ###
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

### VisualStudioCode Patch ###
# Ignore all local history of files
.history
.ionide

### VisualStudio ###
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
coverage*.json
coverage*.xml
coverage*.info

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
*.vbp

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
*.dsw
*.dsp

# Visual Studio 6 technical files

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# Visual Studio History (VSHistory) files
.vshistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd

# VS Code files for those working on multiple tools
*.code-workspace

# Local History for Visual Studio Code

# Windows Installer files from build outputs
*.cab
*.msi
*.msix
*.msm
*.msp

# JetBrains Rider
*.sln.iml

### VisualStudio Patch ###
# Additional files built by Visual Studio

# End of https://www.toptal.com/developers/gitignore/api/qtcreator,clion,cmake,visualstudiocode,visualstudio,eclipse,vim,emacs,kate
.DS_Store
sprint1/problems/async_server/precode/.clang-format
sprint1/problems/async_server/precode/build/.cmake/api/v1/query/cache-v2
sprint1/problems/async_server/precode/build/.cmake/api/v1/query/cmakeFiles-v1
sprint1/problems/async_server/precode/build/.cmake/api/v1/query/codemodel-v2
sprint1/problems/restaurant_single_threaded/precode/build/qtcsettings.cmake
sprint1/problems/restaurant_single_threaded/precode/build/graph_info.json
sprint1/problems/restaurant_single_threaded/precode/build/conaninfo.txt
sprint1/problems/async_server/precode/build/.cmake/api/v1/reply.prev/cache-v2-891e653e980c2bbfedcb.json
sprint1/problems/async_server/precode/build/.cmake/api/v1/reply.prev/cmakeFiles-v1-e5e72211d37416d28f67.json
sprint1/problems/async_server/precode/build/.cmake/api/v1/reply.prev/codemodel-v2-a3c00ee84147becebfae.json
sprint1/problems/async_server/precode/build/.cmake/api/v1/reply.prev/directory-.-f5ebdc15457944623624.json
sprint1/problems/async_server/precode/build/.cmake/api/v1/reply.prev/index-2023-01-17T16-27-34-0487.json
sprint1/problems/async_server/precode/build/.cmake/api/v1/reply.prev/target-hello_async-d6767561f732fe318284.json
sprint1/problems/async_server/precode/build/.cmake/api/v1/reply/cache-v2-891e653e980c2bbfedcb.json
sprint1/problems/async_server/precode/build/.cmake/api/v1/reply/cmakeFiles-v1-e5e72211d37416d28f67.json
sprint1/problems/async_server/precode/build/.cmake/api/v1/reply/codemodel-v2-aeb8c3d7afe4efe8867e.json
sprint1/problems/async_server/precode/build/.cmake/api/v1/reply/directory-.-f5ebdc15457944623624.json
sprint1/problems/async_server/precode/build/.cmake/api/v1/reply/index-2023-01-17T16-28-09-0430.json
sprint1/problems/async_server/precode/build/.cmake/api/v1/reply/target-hello_async-07d01a431628966d659b.json
sprint1/problems/async_server/precode/build/CMakeCache.txt.prev
sprint1/problems/async_server/precode/build/conan.lock
sprint1/problems/async_server/precode/build/conanbuildinfo.cmake
sprint1/problems/async_server/precode/build/conanbuildinfo.txt
sprint1/problems/async_server/precode/build/conaninfo.txt
sprint1/problems/async_server/precode/build/graph_info.json
sprint1/problems/async_server/precode/build/qtcsettings.cmake
sprint1/problems/map_json/precode/build/.cmake/api/v1/query/cache-v2
sprint1/problems/map_json/precode/build/.cmake/api/v1/query/client-vscode/query.json
sprint1/problems/map_json/precode/build/.cmake/api/v1/query/cmakeFiles-v1
sprint1/problems/map_json/precode/build/.cmake/api/v1/query/codemodel-v2
sprint1/problems/map_json/precode/build/.cmake/api/v1/reply.prev/cache-v2-383d99ada411e7be7857.json
sprint1/problems/map_json/precode/build/.cmake/api/v1/reply.prev/cmakeFiles-v1-6380f2459d61493bd58d.json
sprint1/problems/map_json/precode/build/.cmake/api/v1/reply.prev/codemodel-v2-b48ba5b0a20291f92f2c.json
sprint1/problems/map_json/precode/build/.cmake/api/v1/reply.prev/directory-.-f5ebdc15457944623624.json
sprint1/problems/map_json/precode/build/.cmake/api/v1/reply.prev/index-2023-01-18T22-40-32-0011.json
sprint1/problems/map_json/precode/build/.cmake/api/v1/reply.prev/target-game_server-2967e64a4a315dda1909.json
sprint1/problems/map_json/precode/build/.cmake/api/v1/reply/cache-v2-ff4963175b9b257e5491.json
sprint1/problems/map_json/precode/build/.cmake/api/v1/reply/cmakeFiles-v1-fc6de463128841e322b2.json
sprint1/problems/map_json/precode/build/.cmake/api/v1/reply/codemodel-v2-c950035f0e23f1a21d03.json
sprint1/problems/map_json/precode/build/.cmake/api/v1/reply/directory-.-f5ebdc15457944623624.json
sprint1/problems/map_json/precode/build/.cmake/api/v1/reply/index-2023-01-19T19-46-57-0971.json
sprint1/problems/map_json/precode/build/.cmake/api/v1/reply/target-game_server-d7528e1111c02ddf38a6.json
sprint1/problems/map_json/precode/build/.cmake/api/v1/reply/toolchains-v1-759a159ecd98903b88e5.json
sprint1/problems/map_json/precode/build/CMakeCache.txt.prev
sprint1/problems/map_json/precode/build/conan.lock
sprint1/problems/map_json/precode/build/conanbuildinfo.cmake
sprint1/problems/map_json/precode/build/conanbuildinfo.txt
sprint1/problems/map_json/precode/build/conaninfo.txt
sprint1/problems/map_json/precode/build/graph_info.json
sprint1/problems/map_json/precode/build/qtcsettings.cmake
sprint1/problems/restaurant_multi_threaded/precode/build/.cmake/api/v1/query/cache-v2
sprint1/problems/restaurant_multi_threaded/precode/build/.cmake/api/v1/query/cmakeFiles-v1
sprint1/problems/restaurant_multi_threaded/precode/build/.cmake/api/v1/query/codemodel-v2
sprint1/problems/restaurant_multi_threaded/precode/build/.cmake/api/v1/reply/cache-v2-0573b07b910d2342347e.json
sprint1/problems/restaurant_multi_threaded/precode/build/.cmake/api/v1/reply/cmakeFiles-v1-e0a4b3856360661fcc83.json
sprint1/problems/restaurant_multi_threaded/precode/build/.cmake/api/v1/reply/codemodel-v2-18b06cfff31294b91062.json
sprint1/problems/restaurant_multi_threaded/precode/build/.cmake/api/v1/reply/directory-.-f5ebdc15457944623624.json
sprint1/problems/restaurant_multi_threaded/precode/build/.cmake/api/v1/reply/index-2023-01-16T18-52-57-0783.json
sprint1/problems/restaurant_multi_threaded/precode/build/.cmake/api/v1/reply/target-restaurant-4f5da3070ab67614256e.json
sprint1/problems/restaurant_multi_threaded/precode/build/CMakeCache.txt.prev
sprint1/problems/restaurant_multi_threaded/precode/build/conan.lock
sprint1/problems/restaurant_multi_threaded/precode/build/conanbuildinfo.cmake
sprint1/problems/restaurant_multi_threaded/precode/build/conanbuildinfo.txt
sprint1/problems/restaurant_multi_threaded/precode/build/conaninfo.txt
sprint1/problems/restaurant_multi_threaded/precode/build/graph_info.json
sprint1/problems/restaurant_multi_threaded/precode/build/qtcsettings.cmake
sprint1/problems/restaurant_multi_threaded/solution/build/.cmake/api/v1/query/cache-v2
sprint1/problems/restaurant_multi_threaded/solution/build/.cmake/api/v1/query/cmakeFiles-v1
sprint1/problems/restaurant_multi_threaded/solution/build/.cmake/api/v1/query/codemodel-v2
sprint1/problems/restaurant_multi_threaded/solution/build/.cmake/api/v1/reply/cache-v2-47c6b03acc1d17b4614c.json
sprint1/problems/restaurant_multi_threaded/solution/build/.cmake/api/v1/reply/cmakeFiles-v1-1b3f73efdc336224e241.json
sprint1/problems/restaurant_multi_threaded/solution/build/.cmake/api/v1/reply/codemodel-v2-c19ca793ee5d5b8d8e8c.json
sprint1/problems/restaurant_multi_threaded/solution/build/.cmake/api/v1/reply/directory-.-f5ebdc15457944623624.json
sprint1/problems/restaurant_multi_threaded/solution/build/.cmake/api/v1/reply/index-2023-01-15T23-14-14-0044.json
sprint1/problems/restaurant_multi_threaded/solution/build/.cmake/api/v1/reply/target-restaurant-177dbe258891400cf520.json
sprint1/problems/restaurant_multi_threaded/solution/build/CMakeCache.txt.prev
sprint1/problems/restaurant_multi_threaded/solution/build/conan.lock
sprint1/problems/restaurant_multi_threaded/solution/build/conanbuildinfo.cmake
sprint1/problems/restaurant_multi_threaded/solution/build/conanbuildinfo.txt
sprint1/problems/restaurant_multi_threaded/solution/build/conaninfo.txt
sprint1/problems/restaurant_multi_threaded/solution/build/graph_info.json
sprint1/problems/restaurant_multi_threaded/solution/build/qtcsettings.cmake
sprint1/problems/restaurant_single_threaded/precode/build/.cmake/api/v1/query/cache-v2
sprint1/problems/restaurant_single_threaded/precode/build/.cmake/api/v1/query/cmakeFiles-v1
sprint1/problems/restaurant_single_threaded/precode/build/.cmake/api/v1/query/codemodel-v2
sprint1/problems/restaurant_single_threaded/precode/build/.cmake/api/v1/reply/cache-v2-def80b338fd71ab65547.json
sprint1/problems/restaurant_single_threaded/precode/build/.cmake/api/v1/reply/cmakeFiles-v1-b8a6af60405fdd7281b9.json
sprint1/problems/restaurant_single_threaded/precode/build/.cmake/api/v1/reply/codemodel-v2-a2e480f1e6473c983cb9.json
sprint1/problems/restaurant_single_threaded/precode/build/.cmake/api/v1/reply/directory-.-f5ebdc15457944623624.json
sprint1/problems/restaurant_single_threaded/precode/build/.cmake/api/v1/reply/index-2023-01-15T16-12-51-0259.json
sprint1/problems/restaurant_single_threaded/precode/build/.cmake/api/v1/reply/target-restaurant-177dbe258891400cf520.json
sprint1/problems/restaurant_single_threaded/precode/build/CMakeCache.txt.prev
sprint1/problems/restaurant_single_threaded/precode/build/conan.lock
sprint1/problems/restaurant_single_threaded/precode/build/conanbuildinfo.cmake
sprint1/problems/restaurant_single_threaded/precode/build/conanbuildinfo.txt
sprint1/problems/map_json/precode/Dockerfile
web_server/build
web_server/.clang-format
